#!/bin/bash
##################################################
##
##  19-Sep-2012  Suneel Tirunamala Initial Script
##  24-Mar-2023  Sagar Fale - modifications in progress
##  
##  This scripts performs the configuration steps for applications.
##  This script provides Autoconfig, Adcfgclone, startingAdmin server on Apps Tier
#################################################

. /scripts/clone/conf/${1}_refresh.env

function f_pre_autconfig_sql
{

  f_echo "In Function f_pre_autconfig_sql"
  rm -f ${TEMP_LOG_LOC}/sql_output >> ${LOG_FILE} 2>> ${LOG_FILE}
  if [ "$?" != "0" ]
  then
      f_echo "ERROR:Not able to clear the temp ${TEMP_LOG_LOC}/sql_output file "
      exit
  fi
 
  f_run_sql_script APPS ${APPS_PWD} ${PRE_AUTOCONFIG_SQL}

  f_echo "Exiting Function f_pre_autconfig_sql"
} 
  

function f_app_autoconfig
{
  f_echo "In Fucntion f_app_autoconfig"
  TEMP_FILE=${TEMP_LOG_LOC}/autoconfig_temp
  rm -f $TEMP_FILE >>$LOG_FILE 2>>$LOG_FILE
  if [ "$?" != "0" ]
  then
     f_echo "ERROR: Not able to delete the temp file $TEMP_FILE."
     exit
  fi

  f_echo "Running Autoconfig on AppTier"
  f_echo "You may monitor the progress in $TEMP_FILE"
  f_echo "script=$AUTOCONFIG_SCRIPT"

  ${ADCONFIG_SCRIPT} contextfile=${1} appspass=$APPS_PWD >> $TEMP_FILE 2>>$TEMP_FILE
  cat $TEMP_FILE >> $LOG_FILE
  grep -i "AutoConfig completed successfully" $TEMP_FILE >>$LOG_FILE 2>>$LOG_FILE
  if [ "$?" = "0" ]
  then 
     f_echo "SUCCESS: Autoconfig  is completed" 
  else
     f_echo "ERROR: Autoconfig failed ."
     exit
  fi

  f_echo "Exiting f_app_autoconfig"
}


function f_app_adcfgclone
{
  f_echo "In function f_app_adcfgclone"
  TEMP_FILE=${TEMP_LOG_LOC}/adcfgclone_temp
  rm -f $TEMP_FILE >>$LOG_FILE 2>>$LOG_FILE
  if [ "$?" != "0" ]
  then
     f_echo "ERROR: Not able to delete the temp file $TEMP_FILE."
     exit
  fi

  f_echo "Disabling auto start of services after ADCFGCLONE"
#For R12
 perl -pi.old -e 's/(#runPipedCmd.*adstr)/#$1/' ${ADCFGCLONE_SCRIPT}  >>$LOG_FILE 2>>$LOG_FILE
  ##For 11i
#  perl -pi.old -e 's/(system.*adstr)/#$1/' ${ADCFGCLONE_SCRIPT} >>$LOG_FILE 2>>$LOG_FILE
  if [ "$?" != "0" ]
  then
     f_echo "ERROR: Not able to disable autostart."
     exit
  fi


  f_echo "Preparing temporary script to run adcfgclone"
  PERL_SCRIPT=${TEMP_LOG_LOC}/perl_temp.pl
  rm -f $PERL_SCRIPT
  if [ "$?" != "0" ]
  then
    f_echo "ERROR: Not able to delete temporary perl script $PERL_SCRIPT"
    exit;
  fi

  cat ${COMMONFILES}/perl_sub.pl  >> $PERL_SCRIPT
  echo "runPipedCmd(\"${ADCFGCLONE_SCRIPT} appltop $CM_NODE1_RUN_XML ${1}\", \"$APPS_PWD\" ,\"$WL_PASSWD\");" >> $PERL_SCRIPT
  #echo "runPipedCmd(\"${ADCFGCLONE_SCRIPT} appsTier ${1}\", \"$APPS_PWD\" ,\"$WL_PASSWD\");" >> $PERL_SCRIPT
  #echo "runPipedCmd(\"${ADCFGCLONE_SCRIPT} appltop ${1}\", \"$APPS_PWD\" ,\"$WL_PASSWD\");" >> $PERL_SCRIPT
  #echo "runPipedCmd(\"${ADCFGCLONE_SCRIPT} component=appsTier pairsfile=$HOME/DEV2EBS_extn-365-dap23_Pairs.txt dualfs=yes\", \"$WL_PASSWD\" ,\"$APPS_PWD\");" >> $PERL_SCRIPT

  chmod 755 $PERL_SCRIPT
  cat $PERL_SCRIPT >> $LOG_FILE 2>>$LOG_FILE

  f_echo "Running adcfgclone on AppTier"
  f_echo "You may monitor the progress in $TEMP_FILE"

  perl $PERL_SCRIPT  >>$TEMP_FILE 2>>$TEMP_FILE

     cat $TEMP_FILE >> $LOG_FILE
     grep -i "Completed Apply" $TEMP_FILE >>$LOG_FILE 2>>$LOG_FILE
     if [ "$?" = "0" ]
     then
         f_echo "SUCCESS: ADCFGCLONE APPSTIER is completed"
     else
         f_echo "ERROR: ADCFGCLONE failed on app tier."
         exit
     fi
  f_echo "Exiting f_app_adcfgclone"
}

function f_start_admin
{
  f_echo "In function f_start_admin"
  f_echo "Preparing temporary script to start admin"
  PERL_SCRIPT=${TEMP_LOG_LOC}/perl_temp.pl
  rm -f $PERL_SCRIPT $TEMP_FILE
  if [ "$?" != "0" ]
  then
    f_echo "ERROR: Not able to delete temporary perl script $PERL_SCRIPT or $TEMP_FILE"
    exit;
  fi

  cat ${COMMONFILES}/perl_sub.pl  >> $PERL_SCRIPT
  echo "runPipedCmd(\"${ADMIN_START_SCRIPT} start\", \"$WL_PASSWD\" , \"$APPS_PWD\" );" >> $PERL_SCRIPT

  chmod 755 $PERL_SCRIPT
  cat $PERL_SCRIPT >> $LOG_FILE 2>>$LOG_FILE

  f_echo "Starting Admin Server"
  f_echo "You may monitor the progress in $TEMP_FILE"

  /usr/bin/perl $PERL_SCRIPT  >>$TEMP_FILE 2>>$TEMP_FILE

  cat $TEMP_FILE >> $LOG_FILE
  grep -i "exiting with status 0" $TEMP_FILE >>$LOG_FILE 2>>$LOG_FILE
  if [ "$?" = "0" ]
  then
         f_echo "SUCCESS: Admin Server started Successfully"
  else
         f_echo "ERROR: Admin  Server not started."
         exit
  fi

  f_echo "Existing function f_start_admin"
}


function f_app_adpreclone
{
  f_echo "In function f_app_adpreclone"
  f_echo "Preparing temporary script to run adpreclone"
  PERL_SCRIPT=${TEMP_LOG_LOC}/perl_temp.pl
  rm -f $PERL_SCRIPT $TEMP_FILE
  if [ "$?" != "0" ]
  then
    f_echo "ERROR: Not able to delete temporary perl script $PERL_SCRIPT or $TEMP_FILE"
    exit;
  fi

  cat ${COMMONFILES}/perl_sub.pl  >> $PERL_SCRIPT
  echo "runPipedCmd(\"perl ${ADPRECLONE_SCRIPT} appsTier\", \"$APPS_PWD\" , \"$WL_PASSWD\" );" >> $PERL_SCRIPT

  chmod 755 $PERL_SCRIPT
  cat $PERL_SCRIPT >> $LOG_FILE 2>>$LOG_FILE

  f_echo "Running Preclone"
  f_echo "You may monitor the progress in $TEMP_FILE"

  perl $PERL_SCRIPT  >>$TEMP_FILE 2>>$TEMP_FILE

  cat $TEMP_FILE >> $LOG_FILE
  grep -i "Completed Stage" $TEMP_FILE >>$LOG_FILE 2>>$LOG_FILE
  if [ "$?" = "0" ]
  then
         f_echo "SUCCESS: Preclone completed Successfully"
  else
         f_echo "ERROR: Preclone gave errors."
         exit
  fi

  f_echo "Existing function f_app_adpreclone"
}



function f_delete_oacore7
{
  f_echo "In function f_delete_oacore7"

  f_echo "Preparing temporary script to run adpreclone"
  PERL_SCRIPT=${TEMP_LOG_LOC}/perl_temp.pl
  rm -f $PERL_SCRIPT $TEMP_FILE
  if [ "$?" != "0" ]
  then
    f_echo "ERROR: Not able to delete temporary perl script $PERL_SCRIPT or $TEMP_FILE"
    exit;
  fi

  cat ${COMMONFILES}/perl_sub.pl  >> $PERL_SCRIPT
  echo "runPipedCmd(\"perl ${AD_TOP}/patch/115/bin/adProvisionEBS.pl ebs-delete-managedserver -contextfile=$CONTEXT_FILE -managedsrvname=oacore_server6 -servicetype=oacore -logfile=${APPLRGF}/TXK/delMS_oacoreserver6.log.${DATE}\", \"$APPS_PWD\" , \"$WL_PASSWD\" );" >> $PERL_SCRIPT

#echo "runPipedCmd(\"perl ${AD_TOP}/patch/115/bin/adProvisionEBS.pl ebs-delete-managedserver -contextfile=$CONTEXT_FILE -managedsrvname=oacore_server7 -servicetype=oacore -logfile=${APPLRGF}/TXK/delMS_oacoreserver7.log.${DATE}\", \"$APPS_PWD\" , \"$WL_PASSWD\" );" >> $PERL_SCRIPT
  #echo "runPipedCmd(\"perl ${FND_TOP}/patch/115/bin/txkSetAppsConf.pl -contextfile=$CONTEXT_FILE -configoption=removeMS -oacore=extn-chi-pap70.extn.itciss.com:7205\");" >> $PERL_SCRIPT

  chmod 755 $PERL_SCRIPT
  cat $PERL_SCRIPT >> $LOG_FILE 2>>$LOG_FILE

  f_echo "Running Preclone"
  f_echo "You may monitor the progress in $TEMP_FILE"

  /usr/bin/perl $PERL_SCRIPT  >>$TEMP_FILE 2>>$TEMP_FILE

  cat $TEMP_FILE >> $LOG_FILE
  
  sleep 5
  f_echo "Executing txkSetAppsConf.pl "

  # perl ${FND_TOP}/patch/115/bin/txkSetAppsConf.pl -contextfile=$CONTEXT_FILE -configoption=removeMS -oacore=${CM_NODE1_FULL}:$OACORE_SERVER6_PORT >>$LOG_FILE 2>> $LOG_FILE

#  perl ${FND_TOP}/patch/115/bin/txkSetAppsConf.pl -contextfile=$CONTEXT_FILE -configoption=removeMS -oacore=extn-chi-pap21.extn.itciss.com:7205 >>$LOG_FILE 2>> $LOG_FILE

 # perl ${FND_TOP}/patch/115/bin/txkSetAppsConf.pl -contextfile=$CONTEXT_FILE -configoption=removeMS -oacore=extn-chi-pap21.extn.itciss.com:7206 >>$LOG_FILE 2>> $LOG_FILE

  f_echo "Removing null directory in webhome in $WEB_INSTANCE_HOME"
 
  cd $WEB_INSTANCE_HOME >>$LOG_FILE 2>> $LOG_FILE
  CWD=`pwd`
  if [ "$CWD" = "$WEB_INSTANCE_HOME" ]
  then
     rm -rf null  >>$LOG_FILE 2>> $LOG_FILE
  fi 

  f_echo "Existing from f_delete_oacore6"
}
##Main

f_echo "Starting $0 with arguments $@"

APPS_PWD=`GetPassword APPS $SOURCE_INSTANCE`
WL_PASSWD=`GetPassword WEBLOGIC $SOURCE_INSTANCE`

rm -f $ADCFGCLONE_SUCCESS >>$LOG_FILE 2>>$LOG_FILE
if [ "$?" != "0" ]
then
   f_echo "ERROR: Not able to delete previous success file $SUCCESS_FILE"
   exit
fi

f_check_run_fs

f_echo "Restoring the run  xml file from $CM_NODE1_RUN_XML_SOURCE   to $CM_NODE1_RUN_XML"
cp $CM_NODE1_RUN_XML_SOURCE $CM_NODE1_RUN_XML >>$LOG_FILE 2>>$LOG_FILE
DT=`date '+%F'`
echo $DT
sed "s/XXXXXX/$DT/g" $CM_NODE1_RUN_XML_SOURCE > $CM_NODE1_RUN_XML
if [ "$?" != "0" ]
then
    f_echo "ERROR: Not able to restore $CM_NODE1_RUN_XML_SOURCE   to $CM_NODE1_RUN_XML"
    exit;
fi

#f_echo "Removing files in RUN FMW directory $FMW_DIR"
#cd $FMW_DIR >>$LOG_FILE 2>>$LOG_FILE
#PWD=`pwd` >>$LOG_FILE 2>>$LOG_FILE
#if [ "$PWD" = "$FMW_DIR" ]
#then
#   rm -rf * >>$LOG_FILE 2>>$LOG_FILE
#    f_echo "!!!!!!!!!! Commented Removing files in RUN FMW directory $FMW_DIR !!!!!!!!!!!!!"
#   if [ "$?" != "0" ]
#   then
#      f_echo "ERROR: Not able to delete files in $FMW_DIR"
#      exit;
#   fi
#   rm -f .home >>$LOG_FILE 2>>$LOG_FILE
#   if [ "$?" != "0" ]
#   then
#      f_echo "ERROR: Not able to delete .home in in $FMW_DIR"
#      exit;
#   fi
#
#else
#   f_echo "ERROR: Not able to change directory to $FMW_DIR to delete the folder"
#   f_echo "ERROR: If you are re-running this step, then you may manually create  $FMW_DIR so that this script can delete it."
#   exit;
#fi

#cd /tmp
#rmdir $FMW_DIR >>$LOG_FILE 2>>$LOG_FILE
#if [ "$?" != "0" ]
#then
#      f_echo "ERROR: Not able to remove directory $FMW_DIR"
#      exit;
#fi


#f_echo "Removing Ora Inventory $APP_INVENTORY" 
#cd $APP_INVENTORY >>$LOG_FILE 2>>$LOG_FILE
#PWD=`pwd` >>$LOG_FILE 2>>$LOG_FILE
#if [ "$PWD" = "$APP_INVENTORY" ]
#then
#    f_echo "!!!!!!!!!Commented Ora Inventory $APP_INVENTORY!!!!!!!!!"
#   rm -rf * >>$LOG_FILE 2>>$LOG_FILE
#   if [ "$?" != "0" ]
#   then
#      f_echo "ERROR: Not able to delete files in $APP_INVENTORY"
#      exit;
#   fi
#else
#   f_echo "ERROR: Not able to change dir to  Inventory"
#   exit;
#fi



f_echo "Executing Adcfgclone on Master CM/APP node."

f_app_adcfgclone $CM_NODE1_RUN_XML

. $CM_NODE1_ENV_FILE

f_echo "Start Admin Server"
f_start_admin

#f_echo "Delete oacore_server6 from the domain"
#f_delete_oacore7

#sleep 60

#f_echo "Executing adpreclone on Run FS"
#f_app_adpreclone
    
f_echo "SUCCESS: adcfgclone completed on DB and APP/CM nodes."
touch $ADCFGCLONE_SUCCESS

     

exit
